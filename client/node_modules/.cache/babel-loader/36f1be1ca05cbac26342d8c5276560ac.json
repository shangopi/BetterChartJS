{"ast":null,"code":"import castPath from './_castPath.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isIndex from './_isIndex.js';\nimport isLength from './isLength.js';\nimport toKey from './_toKey.js';\n/**\r\n * Checks if `path` exists on `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @param {Array|string} path The path to check.\r\n * @param {Function} hasFunc The function to check properties.\r\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\r\n */\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nexport default hasPath;","map":{"version":3,"names":["castPath","isArguments","isArray","isIndex","isLength","toKey","hasPath","object","path","hasFunc","index","length","result","key"],"sources":["D:/Projects/SEP/BetterChartJS/client/node_modules/lodash-es/_hasPath.js"],"sourcesContent":["import castPath from './_castPath.js';\r\nimport isArguments from './isArguments.js';\r\nimport isArray from './isArray.js';\r\nimport isIndex from './_isIndex.js';\r\nimport isLength from './isLength.js';\r\nimport toKey from './_toKey.js';\r\n\r\n/**\r\n * Checks if `path` exists on `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @param {Array|string} path The path to check.\r\n * @param {Function} hasFunc The function to check properties.\r\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\r\n */\r\nfunction hasPath(object, path, hasFunc) {\r\n  path = castPath(path, object);\r\n\r\n  var index = -1,\r\n      length = path.length,\r\n      result = false;\r\n\r\n  while (++index < length) {\r\n    var key = toKey(path[index]);\r\n    if (!(result = object != null && hasFunc(object, key))) {\r\n      break;\r\n    }\r\n    object = object[key];\r\n  }\r\n  if (result || ++index != length) {\r\n    return result;\r\n  }\r\n  length = object == null ? 0 : object.length;\r\n  return !!length && isLength(length) && isIndex(key, length) &&\r\n    (isArray(object) || isArguments(object));\r\n}\r\n\r\nexport default hasPath;\r\n"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gBAArB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,OAA/B,EAAwC;EACtCD,IAAI,GAAGR,QAAQ,CAACQ,IAAD,EAAOD,MAAP,CAAf;EAEA,IAAIG,KAAK,GAAG,CAAC,CAAb;EAAA,IACIC,MAAM,GAAGH,IAAI,CAACG,MADlB;EAAA,IAEIC,MAAM,GAAG,KAFb;;EAIA,OAAO,EAAEF,KAAF,GAAUC,MAAjB,EAAyB;IACvB,IAAIE,GAAG,GAAGR,KAAK,CAACG,IAAI,CAACE,KAAD,CAAL,CAAf;;IACA,IAAI,EAAEE,MAAM,GAAGL,MAAM,IAAI,IAAV,IAAkBE,OAAO,CAACF,MAAD,EAASM,GAAT,CAApC,CAAJ,EAAwD;MACtD;IACD;;IACDN,MAAM,GAAGA,MAAM,CAACM,GAAD,CAAf;EACD;;EACD,IAAID,MAAM,IAAI,EAAEF,KAAF,IAAWC,MAAzB,EAAiC;IAC/B,OAAOC,MAAP;EACD;;EACDD,MAAM,GAAGJ,MAAM,IAAI,IAAV,GAAiB,CAAjB,GAAqBA,MAAM,CAACI,MAArC;EACA,OAAO,CAAC,CAACA,MAAF,IAAYP,QAAQ,CAACO,MAAD,CAApB,IAAgCR,OAAO,CAACU,GAAD,EAAMF,MAAN,CAAvC,KACJT,OAAO,CAACK,MAAD,CAAP,IAAmBN,WAAW,CAACM,MAAD,CAD1B,CAAP;AAED;;AAED,eAAeD,OAAf"},"metadata":{},"sourceType":"module"}