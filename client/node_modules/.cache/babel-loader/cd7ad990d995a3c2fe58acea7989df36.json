{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\BetterChartJS\\\\client\\\\src\\\\pages\\\\ShowData\\\\ShowData.jsx\",\n    _s = $RefreshSig$();\n\nimport Papa from \"papaparse\";\nimport csvFile from \"./test.csv\";\nimport './ShowData.css';\nimport React, { useState, useRef } from \"react\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ShowData = () => {\n  _s();\n\n  const [text, setText] = useState([]); //all the labels for x axis\n\n  const [textY, setTextY] = useState([]); //all the lables for Yaxis\n\n  const [tableData, setTableData] = useState([]); //all the data in array format  [[],[],[]]\n\n  const [xVariable, setXVariable] = useState('X'); // Chosen label for Xaxis\n\n  const [sourceNode, setSourceNode] = useState('Source Node');\n  const [targetNode, setTargetNode] = useState('Target Node');\n  const [weight, setWeight] = useState('Weight (Should be a numerical value)');\n  const [yVariable, setYVariable] = useState([]); //Chosen labels in the Yaxis\n\n  const [dragging, setDragging] = useState(false);\n  const dragItem = useRef();\n  const dragNode = useRef();\n  const [x_axis, setX_axis] = useState([]); // [label:[values]]    Data column for the chosen label\n\n  const [y_axis, setY_axis] = useState([]); // [label1:[values1],label2:[values2]]   Data columns for the chosen labels\n\n  const [arcData, setArcData] = useState([]); // [[sourceNode1,TargetNode1,weight1],[sourceNode2,TargetNode2,weight2],[sourceNode3,TargetNode3,weight3]]\n  //const arr=[];\n\n  var count;\n  var chartType = 'ChartJs'; // chart types are 'ChartJS' and ArcChart\n\n  const [checkBool, setCheckBool] = useState(false);\n  useEffect(() => {\n    fetch(csvFile).then(response => response.text()).then(responseText => {\n      // -- parse csv\n      var data = Array(Papa.parse(responseText));\n      var out = data[0]['data'];\n      var label_a = out[0];\n      var data_a = out.slice(1, out.length - 1);\n      var textY_arr = [];\n      setText(out[0]);\n      setTableData(out.slice(1, out.length - 1));\n      label_a.map((va, vai) => {\n        var state = true;\n\n        for (var i = 0; i < data_a.length; i++) {\n          if (isNaN(data_a[i][vai])) {\n            state = false;\n            break;\n          }\n        }\n\n        if (state == true) {\n          textY_arr.push(va);\n        }\n      });\n      setTextY(textY_arr);\n      console.log(textY);\n    });\n  }, []); // const load = async function(){\n  //     await fetch( csvFile )\n  // .then( response =>  response.text() )\n  // .then( responseText => {\n  //     // -- parse csv\n  //     var data =Array(Papa.parse(responseText));\n  //     var out=data[0]['data'];\n  //     setText(out[0]);\n  //     setTableData(out.slice(1,out.length-1));\n  //     console.log('data:', (text));\n  // })\n  // };\n  //passes \"x\" or \"Y\" and column number\n  //1st text use state has to be loaded\n\n  const arrayPush = function (axis) {\n    const arr = [];\n    var j;\n\n    if (axis == \"x\") {\n      j = text.indexOf(xVariable);\n\n      if (j != -1) {\n        const sub_arr = [];\n        tableData.map(row => {\n          sub_arr.push(row[j]);\n        });\n        arr[xVariable] = sub_arr;\n        setX_axis(arr);\n        console.log(\"ARrAY\", arr);\n      }\n    } else if (axis == \"y\") {\n      yVariable.map(label => {\n        j = text.indexOf(label);\n\n        if (j !== -1) {\n          const sub_arr = [];\n          tableData.map(row => {\n            sub_arr.push(row[j]);\n          });\n          arr[label] = sub_arr; //labels shud not have the same name.\n        }\n      });\n      setY_axis(arr);\n      console.log(\"ARRAY\", arr);\n    } else if (axis = 'A') {\n      var l = text.indexOf(sourceNode);\n      var m = text.indexOf(targetNode);\n      var n = text.indexOf(weight);\n      tableData.map(row => {\n        arr.push([row[l], row[m], row[n]]);\n      });\n      console.log(arr);\n      setArcData(arr);\n    }\n  };\n\n  const load = () => {\n    if (chartType === 'ChartJs') {\n      arrayPush('x');\n      arrayPush('y');\n    } else if (chartType === \"ArcChart\") {\n      arrayPush('A');\n    }\n  };\n\n  const check = variable => {\n    var j = text.indexOf(variable);\n    var c = 0;\n\n    for (var i = 0; i < tableData.length; i++) {\n      if (isNaN(tableData[i][j])) {\n        setWeight(variable + \" (This column contains strings. Enter another)\");\n        c += 1;\n        return false;\n      }\n    }\n\n    if (c === 0) {\n      console.log(\"came here two\");\n      return true;\n    }\n  };\n\n  const fullfill = () => {\n    var b = sourceNode === 'Source Node' || targetNode === 'Target Node' || weight === 'Weight (Should be a numerical value)';\n    return b;\n  };\n\n  const handleDragStart = (e, params) => {\n    console.log(\"drag starting\", params);\n    dragItem.current = params;\n    dragNode.current = e.target;\n    dragNode.current.addEventListener('dragend', handleDragEnd);\n    setTimeout(() => {\n      setDragging(true);\n    }, 0);\n  };\n\n  const handleDragEnter = (e, params, i) => {\n    console.log(\"Enteringg drag\", params);\n    const currentItem = dragItem.current;\n    const xvariable = text[currentItem[\"variNameI\"]];\n    const y_variable = textY[currentItem[\"variNameI\"]];\n\n    if (params === 'X') {\n      if (i == 0) {\n        setXVariable(xvariable);\n      } else if (i == 1) {\n        setSourceNode(xvariable);\n      } else if (i == 2) {\n        setTargetNode(xvariable);\n      } else if (i == 3) {\n        setWeight(xvariable);\n      }\n\n      if (i === 3) {\n        var bool = check(xvariable);\n        console.log(\"State : \", bool);\n        setCheckBool(bool);\n      }\n    } else if (params === 'Y' && !yVariable.includes(y_variable)) {\n      setYVariable(oldarray => {\n        var newarray = oldarray;\n        newarray[i] = y_variable;\n        console.log(\"Checking why axis\", newarray);\n        return newarray;\n      }); //setYVariable(text[currentItem[\"variNameI\"]]);\n      // console.log(\"current item is\",text[currentItem[\"variNameI\"]]);\n      // arrayPush('y',currentItem[\"variNameI\"]);\n      // console.log(\"Array\",y_axis);\n    } // if(e.target !== dragNode.current){\n    //     console.log(\"Target is not the same\");\n    //     setList(oldList=>{\n    //         let newList = JSON.parse(JSON.stringify(oldList));\n    //         newList[params.grpI].items.splice(params.itemI,0,newList[currentItem.grpI].items.splice(currentItem.itemI,1)[0]);\n    //         dragItem.current = params;\n    //         return newList;\n    //     })\n    // }\n\n  };\n\n  const handleDragEnd = () => {\n    console.log(\"Ending Drag\");\n    setDragging(false);\n    dragNode.current.removeEventListener('dragend', handleDragEnd);\n    dragItem.current = null;\n    dragNode.current = null;\n  };\n\n  const getStyles = params => {\n    if (dragItem.current.variNameI === params.variNameI) {\n      return 'current dnd-item';\n    }\n\n    return 'dnd-item';\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '50px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"CSV Data Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflow: \"auto\",\n        marginLeft: '50px',\n        marginTop: '50px',\n        marginBottom: '50px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"csvtable\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"csvtr\",\n          children: text.map(row => {\n            return /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"csvth\",\n              children: row\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 32\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"csvtable\",\n        children: tableData.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"csvtr\",\n          children: row.map(ele => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"csvtd\",\n            children: ele\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '50px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Chose a label for X axis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drag-n-drop\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dnd-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group-title\",\n            children: \"Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 29\n          }, this), text.map((variName, variNameI) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              draggable: true,\n              onDragStart: e => handleDragStart(e, {\n                variNameI\n              }),\n              onDragEnter: dragging ? e => {\n                handleDragEnter(e, {\n                  variNameI\n                });\n              } : null,\n              className: dragging ? getStyles({\n                variNameI\n              }) : \"dnd-item\",\n              children: variName\n            }, variNameI, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 40\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }, this), chartType == 'ChartJs' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dnd-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group-title\",\n              children: \"X-Axis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              draggable: true,\n              onDragEnter: dragging ? e => {\n                handleDragEnter(e, 'X', 0);\n              } : null,\n              className: \"dnd-item\",\n              children: xVariable\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 50\n        }, this), chartType === \"ArcChart\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dnd-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group-title\",\n                children: \"Source Node\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                draggable: true,\n                onDragEnter: dragging ? e => {\n                  handleDragEnter(e, 'X', 1);\n                } : null,\n                className: \"dnd-item\",\n                children: sourceNode\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dnd-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group-title\",\n                children: \"Target Node\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                draggable: true,\n                onDragEnter: dragging ? e => {\n                  handleDragEnter(e, 'X', 2);\n                } : null,\n                className: \"dnd-item\",\n                children: targetNode\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dnd-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group-title\",\n                children: \"Weight\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                draggable: true,\n                onDragEnter: dragging ? e => {\n                  handleDragEnter(e, 'X', 3);\n                } : null,\n                className: \"dnd-item\",\n                children: weight\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this), chartType === \"ChartJs\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: '50px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Chose labels for Y axis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drag-n-drop\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dnd-group grid-col-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group-title\",\n              children: \"Item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 29\n            }, this), textY.map((variName, variNameI) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                draggable: true,\n                onDragStart: e => handleDragStart(e, {\n                  variNameI\n                }),\n                onDragEnter: dragging ? e => {\n                  handleDragEnter(e, {\n                    variNameI\n                  });\n                } : null,\n                className: dragging ? getStyles({\n                  variNameI\n                }) : \"dnd-item\",\n                children: variName\n              }, variNameI, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 40\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dnd-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group-title\",\n                children: \"Y-Axis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 33\n              }, this), textY.map((va, vai) => /*#__PURE__*/_jsxDEV(\"div\", {\n                draggable: true,\n                onDragEnter: dragging ? e => {\n                  handleDragEnter(e, 'Y', vai);\n                } : null,\n                className: \"dnd-item\",\n                children: yVariable[vai]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 38\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), chartType === \"ChartJs\" && (xVariable == 'X' || yVariable.length == 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '50px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: 'red'\n          },\n          children: \"Fill x axis and y axis with variables\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 110\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 81\n      }, this), chartType === \"ChartJs\" && !(xVariable == 'X' || yVariable.length == 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '50px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: load,\n          children: \"Okay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 112\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 83\n      }, this), console.log(checkBool), chartType === 'ArcChart' && (!checkBool || fullfill()) && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '50px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: 'red'\n          },\n          children: \"Give a source node, target node and the weight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 102\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 73\n      }, this), chartType === 'ArcChart' && checkBool && !fullfill() && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '50px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: load,\n          children: \"Okay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 102\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 73\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ShowData, \"uUpCc+cqXUnxTZxLcRa+2RTgZC8=\");\n\n_c = ShowData;\nexport default ShowData;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowData\");","map":{"version":3,"names":["Papa","csvFile","React","useState","useRef","useEffect","ShowData","text","setText","textY","setTextY","tableData","setTableData","xVariable","setXVariable","sourceNode","setSourceNode","targetNode","setTargetNode","weight","setWeight","yVariable","setYVariable","dragging","setDragging","dragItem","dragNode","x_axis","setX_axis","y_axis","setY_axis","arcData","setArcData","count","chartType","checkBool","setCheckBool","fetch","then","response","responseText","data","Array","parse","out","label_a","data_a","slice","length","textY_arr","map","va","vai","state","i","isNaN","push","console","log","arrayPush","axis","arr","j","indexOf","sub_arr","row","label","l","m","n","load","check","variable","c","fullfill","b","handleDragStart","e","params","current","target","addEventListener","handleDragEnd","setTimeout","handleDragEnter","currentItem","xvariable","y_variable","bool","includes","oldarray","newarray","removeEventListener","getStyles","variNameI","margin","overflow","marginLeft","marginTop","marginBottom","ele","variName","color"],"sources":["D:/project/BetterChartJS/client/src/pages/ShowData/ShowData.jsx"],"sourcesContent":["import Papa from \"papaparse\";\r\nimport csvFile from \"./test.csv\"\r\nimport './ShowData.css'\r\nimport React, { useState,useRef } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nconst ShowData=()=>{\r\n    const [ text, setText ] = useState([]); //all the labels for x axis\r\n    const [textY,setTextY]=useState([]);//all the lables for Yaxis\r\n    const [tableData,setTableData] = useState([]); //all the data in array format  [[],[],[]]\r\n    const[xVariable,setXVariable]=useState('X'); // Chosen label for Xaxis\r\n    const[sourceNode,setSourceNode]=useState('Source Node');\r\n    const [targetNode,setTargetNode]=useState('Target Node');\r\n    const [weight,setWeight]= useState('Weight (Should be a numerical value)')\r\n    const[yVariable,setYVariable]=useState([]); //Chosen labels in the Yaxis\r\n    const [dragging,setDragging]=useState(false);\r\n    const dragItem=useRef();\r\n    const dragNode=useRef();\r\n    const [x_axis,setX_axis]=useState([]); // [label:[values]]    Data column for the chosen label\r\n    const [y_axis,setY_axis]=useState([]); // [label1:[values1],label2:[values2]]   Data columns for the chosen labels\r\n    const[arcData,setArcData]=useState([]) // [[sourceNode1,TargetNode1,weight1],[sourceNode2,TargetNode2,weight2],[sourceNode3,TargetNode3,weight3]]\r\n    //const arr=[];\r\n    var count;\r\n    var chartType='ChartJs'; // chart types are 'ChartJS' and ArcChart\r\n    const [checkBool,setCheckBool]=useState(false);\r\n\r\n    \r\n    useEffect(()=>{\r\n\r\n        fetch( csvFile )\r\n        .then( response =>  response.text() )\r\n        .then( responseText => {\r\n            // -- parse csv\r\n            \r\n            var data =Array(Papa.parse(responseText));\r\n            var out=data[0]['data'];\r\n            var label_a=out[0]\r\n            var data_a =out.slice(1,out.length-1);\r\n            var textY_arr=[]\r\n            setText(out[0]);\r\n            setTableData(out.slice(1,out.length-1));\r\n            label_a.map((va,vai)=>{\r\n                var state=true;\r\n                for (var i = 0; i < data_a.length; i++) {\r\n                    if (isNaN(data_a[i][vai])) {\r\n                        state = false;\r\n                        break;\r\n                    }\r\n                }\r\n                if(state==true){\r\n                \r\n                    textY_arr.push(va);\r\n                }\r\n        })\r\n        setTextY(textY_arr);\r\n        console.log(textY);\r\n        })\r\n    },[])\r\n    \r\n    // const load = async function(){\r\n    //     await fetch( csvFile )\r\n    // .then( response =>  response.text() )\r\n    // .then( responseText => {\r\n    //     // -- parse csv\r\n    //     var data =Array(Papa.parse(responseText));\r\n    //     var out=data[0]['data'];\r\n    //     setText(out[0]);\r\n    //     setTableData(out.slice(1,out.length-1));\r\n    //     console.log('data:', (text));\r\n    // })\r\n    // };\r\n    \r\n    //passes \"x\" or \"Y\" and column number\r\n    //1st text use state has to be loaded\r\n    const arrayPush =function ( axis ){\r\n        const arr=[];\r\n        var j;\r\n        if(axis==\"x\"){\r\n            j=text.indexOf(xVariable);\r\n            if(j!=-1){\r\n                const sub_arr=[];\r\n                tableData.map(row=>{\r\n                    sub_arr.push(row[j]);\r\n                })\r\n                arr[xVariable]=sub_arr;\r\n                setX_axis(arr);\r\n                console.log(\"ARrAY\",arr);\r\n            }\r\n            \r\n        }\r\n        else if (axis ==\"y\"){\r\n            yVariable.map(label=>{\r\n                j=text.indexOf(label);\r\n                if(j!==-1){\r\n                    const sub_arr=[];\r\n                    tableData.map(row=>{\r\n                        sub_arr.push(row[j]);\r\n                    })\r\n                    arr[label]=sub_arr;     //labels shud not have the same name.\r\n\r\n                }\r\n            })\r\n            \r\n            setY_axis(arr);\r\n            console.log(\"ARRAY\",arr);\r\n        }\r\n        else if(axis='A'){\r\n            var l = text.indexOf(sourceNode);\r\n            var m = text.indexOf(targetNode);\r\n            var n = text.indexOf(weight);\r\n            tableData.map(row=>{\r\n                arr.push([row[l],row[m],row[n]])\r\n            })\r\n            console.log(arr);\r\n            setArcData(arr);\r\n        }\r\n    };\r\n\r\n    const load=()=>{\r\n\r\n        if(chartType==='ChartJs'){\r\n            arrayPush('x');\r\n            arrayPush('y');\r\n        }\r\n        else if(chartType===\"ArcChart\"){\r\n            arrayPush('A');\r\n        }\r\n        \r\n    }\r\n\r\n   const check=(variable)=>{\r\n        \r\n        var j = text.indexOf(variable);\r\n        var c=0;\r\n        for(var i=0;i<tableData.length;i++){\r\n            if(isNaN(tableData[i][j])){\r\n                setWeight(variable+\" (This column contains strings. Enter another)\");\r\n                c+=1;\r\n                return false\r\n            }\r\n        }\r\n        \r\n        if(c===0){\r\n            console.log(\"came here two\")\r\n            return true\r\n        }   \r\n   }\r\n\r\n   const fullfill=()=>{\r\n    var b= (sourceNode==='Source Node'||targetNode==='Target Node'||weight==='Weight (Should be a numerical value)');\r\n    return b\r\n   }\r\n\r\n    const handleDragStart = (e,params)=>{\r\n        console.log(\"drag starting\",params);\r\n        dragItem.current= params;\r\n        dragNode.current= e.target;\r\n        dragNode.current.addEventListener('dragend',handleDragEnd);\r\n        setTimeout(()=>{\r\n            setDragging(true);\r\n        },0)\r\n        \r\n    }\r\n\r\n    const handleDragEnter= (e,params,i)=>{\r\n        console.log(\"Enteringg drag\",params);\r\n        const currentItem= dragItem.current;\r\n        const xvariable = text[currentItem[\"variNameI\"]];\r\n        const y_variable =textY[currentItem[\"variNameI\"]]\r\n         if(params==='X'){\r\n            if(i==0){\r\n                setXVariable(xvariable);\r\n            }\r\n            else if(i==1){\r\n                setSourceNode(xvariable);\r\n            }\r\n            else if(i==2){\r\n                setTargetNode(xvariable); \r\n            }\r\n            else if(i==3){\r\n                setWeight(xvariable);\r\n            }\r\n\r\n            if(i===3){\r\n                var bool=check(xvariable);\r\n                console.log(\"State : \",bool);\r\n                setCheckBool(bool);\r\n            }\r\n         }\r\n         else if(params==='Y' && !(yVariable.includes(y_variable))){\r\n            setYVariable(oldarray=>{\r\n                var newarray=oldarray;\r\n                newarray[i]=y_variable;\r\n                console.log(\"Checking why axis\",newarray);\r\n                return newarray\r\n            })\r\n            //setYVariable(text[currentItem[\"variNameI\"]]);\r\n            // console.log(\"current item is\",text[currentItem[\"variNameI\"]]);\r\n            // arrayPush('y',currentItem[\"variNameI\"]);\r\n            // console.log(\"Array\",y_axis);\r\n         }\r\n        // if(e.target !== dragNode.current){\r\n        //     console.log(\"Target is not the same\");\r\n        //     setList(oldList=>{\r\n        //         let newList = JSON.parse(JSON.stringify(oldList));\r\n        //         newList[params.grpI].items.splice(params.itemI,0,newList[currentItem.grpI].items.splice(currentItem.itemI,1)[0]);\r\n        //         dragItem.current = params;\r\n        //         return newList;\r\n        //     })\r\n        // }\r\n    }\r\n\r\n    const handleDragEnd=()=>{\r\n        console.log(\"Ending Drag\");\r\n        setDragging(false);\r\n        dragNode.current.removeEventListener('dragend',handleDragEnd);\r\n        dragItem.current= null;\r\n        dragNode.current= null;\r\n    }\r\n\r\n    const getStyles=(params)=>{\r\n        if(dragItem.current.variNameI===params.variNameI){\r\n            return 'current dnd-item'\r\n        }\r\n        return 'dnd-item'\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* <button onClick={ load }>load</button>\r\n            <h2>text:</h2> */}\r\n            <div style={{margin:'50px'}}><h2>CSV Data Table</h2></div>\r\n            <div style={{overflow: \"auto\",marginLeft:'50px',marginTop:'50px',marginBottom:'50px'}}>\r\n                <thead className=\"csvtable\">\r\n                    <tr className=\"csvtr\">\r\n                    {(text).map(row=>{\r\n                        return(<th className=\"csvth\">{row}</th>);\r\n                    })}\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"csvtable\">\r\n                    {tableData.map(row=>\r\n                        <tr className=\"csvtr\">\r\n                            {row.map(ele=>\r\n                                <td className=\"csvtd\">{ele}</td>\r\n                                )}\r\n                        </tr>\r\n                        )}\r\n                </tbody>\r\n            </div>\r\n            <div>\r\n                <div style={{margin:'50px'}}><h2>Chose a label for X axis</h2></div>\r\n                <div className=\"drag-n-drop\">\r\n                        <div className=\"dnd-group\">\r\n                            <div className=\"group-title\">\r\n                                Item\r\n                            </div>\r\n                            {(text).map((variName,variNameI)=>{\r\n                                return(<div  \r\n                                        draggable \r\n                                        onDragStart={(e)=>(handleDragStart(e,{variNameI}))}\r\n                                        onDragEnter={dragging?(e)=>{handleDragEnter(e,{variNameI})}:null}\r\n                                        key={variNameI} \r\n                                        className={dragging?getStyles({variNameI}):\"dnd-item\"}>\r\n                                        {variName}</div>);\r\n                             })}\r\n                            \r\n                        </div>\r\n                        {chartType== 'ChartJs'&& <div >\r\n                            <div className=\"dnd-group\">\r\n                                <div className=\"group-title\">X-Axis</div>\r\n                                <div \r\n                                    draggable\r\n                                    onDragEnter={dragging?(e)=>{handleDragEnter(e,'X',0)}:null} \r\n                                    className=\"dnd-item\">\r\n                                    {xVariable}</div>\r\n                                    \r\n                            \r\n                            </div>  \r\n                        </div>}\r\n                        \r\n                        {chartType=== \"ArcChart\" && <>\r\n                        <div >\r\n                            <div className=\"dnd-group\">\r\n                                <div className=\"group-title\">Source Node</div>\r\n                                <div \r\n                                    draggable\r\n                                    onDragEnter={dragging?(e)=>{handleDragEnter(e,'X',1)}:null} \r\n                                    className=\"dnd-item\">\r\n                                    {sourceNode}</div>\r\n                            </div>  \r\n                        </div>\r\n\r\n                        <div >\r\n                            <div className=\"dnd-group\">\r\n                                <div className=\"group-title\">Target Node</div>\r\n                                <div \r\n                                    draggable\r\n                                    onDragEnter={dragging?(e)=>{handleDragEnter(e,'X',2)}:null} \r\n                                    className=\"dnd-item\">\r\n                                    {targetNode}</div>\r\n                            </div>  \r\n                        </div>\r\n\r\n                        <div >\r\n                            <div className=\"dnd-group\">\r\n                                <div className=\"group-title\">Weight</div>\r\n                                <div \r\n                                    draggable\r\n                                    onDragEnter={dragging?(e)=>{handleDragEnter(e,'X',3)}:null} \r\n                                    className=\"dnd-item\">\r\n                                    {weight}</div>\r\n                            </div>  \r\n                        </div>\r\n                        </>}\r\n                        \r\n\r\n                        \r\n                </div>\r\n                {chartType===\"ChartJs\"&& <>\r\n                <div style={{margin:'50px'}}><h2>Chose labels for Y axis</h2></div>\r\n                <div className=\"drag-n-drop\">\r\n                        <div className=\"dnd-group grid-col-3\">\r\n                            <div className=\"group-title\">\r\n                                Item\r\n                            </div>\r\n                            {(textY).map((variName,variNameI)=>{\r\n                                return(<div  \r\n                                        draggable \r\n                                        onDragStart={(e)=>(handleDragStart(e,{variNameI}))}\r\n                                        onDragEnter={dragging?(e)=>{handleDragEnter(e,{variNameI})}:null}\r\n                                        key={variNameI} \r\n                                        className={dragging?getStyles({variNameI}):\"dnd-item\"}>\r\n                                        {variName}</div>);\r\n                             })}\r\n                            \r\n                        </div>\r\n                        <div>\r\n                            <div className=\"dnd-group\">\r\n                                <div className=\"group-title\">Y-Axis</div>\r\n                                {textY.map((va,vai)=>(\r\n                                     <div \r\n                                     draggable\r\n                                     onDragEnter={dragging?(e)=>{handleDragEnter(e,'Y',vai)}:null} \r\n                                     className=\"dnd-item\">\r\n                                     {yVariable[vai]}</div>\r\n                                ))}\r\n                               \r\n                            </div>   \r\n                        </div>\r\n                        \r\n                </div>\r\n                </>}\r\n                \r\n\r\n                {chartType===\"ChartJs\"&&(xVariable=='X'||yVariable.length==0)&& <div style={{margin:'50px'}}><h3 style={{color:'red'}}>Fill x axis and y axis with variables</h3></div>}\r\n                {chartType===\"ChartJs\"&& !(xVariable=='X'||yVariable.length==0)&& <div style={{margin:'50px'}}><button onClick={ load }>Okay</button></div>}\r\n                {console.log(checkBool)}\r\n                {chartType==='ArcChart'&& (!checkBool || fullfill()) && <div style={{margin:'50px'}}><h3 style={{color:'red'}}>Give a source node, target node and the weight</h3></div> }\r\n                {chartType==='ArcChart'&& checkBool && (!fullfill()) && <div style={{margin:'50px'}}><button onClick={ load }>Okay</button></div>}\r\n            \r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ShowData;"],"mappings":"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"},"metadata":{},"sourceType":"module"}