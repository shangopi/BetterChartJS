{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\SEP\\\\BetterChartJS\\\\client\\\\src\\\\pages\\\\ShowData\\\\ShowData.jsx\",\n    _s = $RefreshSig$();\n\nimport Papa from \"papaparse\";\nimport \"./ShowData.css\";\nimport React, { useState, useRef } from \"react\";\nimport { useEffect } from \"react\";\nimport Navbar from \"../../components/Navbar/Navbar\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst charts = [\"area\", \"bar\", \"bubble\", \"line\", \"pie\", \"polar\", \"radar\", \"scatter\"];\nvar chartType;\n\nconst ShowData = () => {\n  _s();\n\n  const csvFile = useSelector(state => state.csvhandler.csv);\n  console.log(csvFile);\n  const chart = useSelector(state => state.csvhandler.charttype);\n  console.log(chart);\n\n  if (charts.includes(chart)) {\n    chartType = \"ChartJs\";\n  } else {\n    chartType = \"ArcChart\";\n  }\n\n  const [text, setText] = useState([]); //all the labels for x axis\n\n  const [textY, setTextY] = useState([]); //all the lables for Yaxis\n\n  const [tableData, setTableData] = useState([]); //all the data in array format  [[],[],[]]\n\n  const [xVariable, setXVariable] = useState(\"X\"); // Chosen label for Xaxis\n\n  const [sourceNode, setSourceNode] = useState(\"Source Node\");\n  const [targetNode, setTargetNode] = useState(\"Target Node\");\n  const [weight, setWeight] = useState(\"Weight (Should be a numerical value)\");\n  const [yVariable, setYVariable] = useState([]); //Chosen labels in the Yaxis\n\n  const [dragging, setDragging] = useState(false);\n  const dragItem = useRef();\n  const dragNode = useRef();\n  const [x_axis, setX_axis] = useState([]); // [label:[values]]    Data column for the chosen label\n\n  const [y_axis, setY_axis] = useState([]); // [label1:[values1],label2:[values2]]   Data columns for the chosen labels\n\n  const [arcData, setArcData] = useState([]); // [[sourceNode1,TargetNode1,weight1],[sourceNode2,TargetNode2,weight2],[sourceNode3,TargetNode3,weight3]]\n  //const arr=[];\n  // var count;\n  // var chartType = \"ChartJs\"; // chart types are 'ChartJS' and ArcChart\n\n  const [checkBool, setCheckBool] = useState(false);\n  useEffect(() => {\n    fetch(csvFile).then(response => response.text()).then(responseText => {\n      // -- parse csv\n      var data = Array(Papa.parse(responseText));\n      var out = data[0][\"data\"];\n      var label_a = out[0];\n      var data_a = out.slice(1, out.length - 1);\n      var textY_arr = [];\n      setText(out[0]);\n      setTableData(out.slice(1, out.length - 1));\n      label_a.map((va, vai) => {\n        var state = true;\n\n        for (var i = 0; i < data_a.length; i++) {\n          if (isNaN(data_a[i][vai])) {\n            state = false;\n            break;\n          }\n        }\n\n        if (state == true) {\n          textY_arr.push(va);\n        }\n      });\n      setTextY(textY_arr);\n      console.log(textY);\n    });\n  }, []); // const load = async function(){\n  //     await fetch( csvFile )\n  // .then( response =>  response.text() )\n  // .then( responseText => {\n  //     // -- parse csv\n  //     var data =Array(Papa.parse(responseText));\n  //     var out=data[0]['data'];\n  //     setText(out[0]);\n  //     setTableData(out.slice(1,out.length-1));\n  //     console.log('data:', (text));\n  // })\n  // };\n  //passes \"x\" or \"Y\" and column number\n  //1st text use state has to be loaded\n\n  const arrayPush = function (axis) {\n    const arr = [];\n    var j;\n\n    if (axis == \"x\") {\n      j = text.indexOf(xVariable);\n\n      if (j != -1) {\n        const sub_arr = [];\n        tableData.map(row => {\n          sub_arr.push(row[j]);\n        });\n        arr[xVariable] = sub_arr;\n        setX_axis(arr);\n        console.log(\"ARrAY\", arr);\n      }\n    } else if (axis == \"y\") {\n      yVariable.map(label => {\n        j = text.indexOf(label);\n\n        if (j !== -1) {\n          const sub_arr = [];\n          tableData.map(row => {\n            sub_arr.push(row[j]);\n          });\n          arr[label] = sub_arr; //labels shud not have the same name.\n        }\n      });\n      setY_axis(arr);\n      console.log(\"ARRAY\", arr);\n    } else if (axis = \"A\") {\n      var l = text.indexOf(sourceNode);\n      var m = text.indexOf(targetNode);\n      var n = text.indexOf(weight);\n      tableData.map(row => {\n        arr.push([row[l], row[m], row[n]]);\n      });\n      console.log(arr);\n      setArcData(arr);\n    }\n  };\n\n  const load = () => {\n    if (chartType === \"ChartJs\") {\n      arrayPush(\"x\");\n      arrayPush(\"y\");\n    } else if (chartType === \"ArcChart\") {\n      arrayPush(\"A\");\n    }\n  };\n\n  const check = variable => {\n    var j = text.indexOf(variable);\n    var c = 0;\n\n    for (var i = 0; i < tableData.length; i++) {\n      if (isNaN(tableData[i][j])) {\n        setWeight(variable + \" (This column contains strings. Enter another)\");\n        c += 1;\n        return false;\n      }\n    }\n\n    if (c === 0) {\n      console.log(\"came here two\");\n      return true;\n    }\n  };\n\n  const fullfill = () => {\n    var b = sourceNode === \"Source Node\" || targetNode === \"Target Node\" || weight === \"Weight (Should be a numerical value)\";\n    return b;\n  };\n\n  const handleDragStart = (e, params) => {\n    console.log(\"drag starting\", params);\n    dragItem.current = params;\n    dragNode.current = e.target;\n    dragNode.current.addEventListener(\"dragend\", handleDragEnd);\n    setTimeout(() => {\n      setDragging(true);\n    }, 0);\n  };\n\n  const handleDragEnter = (e, params, i) => {\n    console.log(\"Enteringg drag\", params);\n    const currentItem = dragItem.current;\n    const xvariable = text[currentItem[\"variNameI\"]];\n    const y_variable = textY[currentItem[\"variNameI\"]];\n\n    if (params === \"X\") {\n      if (i == 0) {\n        setXVariable(xvariable);\n      } else if (i == 1) {\n        setSourceNode(xvariable);\n      } else if (i == 2) {\n        setTargetNode(xvariable);\n      } else if (i == 3) {\n        setWeight(xvariable);\n      }\n\n      if (i === 3) {\n        var bool = check(xvariable);\n        console.log(\"State : \", bool);\n        setCheckBool(bool);\n      }\n    } else if (params === \"Y\" && !yVariable.includes(y_variable)) {\n      setYVariable(oldarray => {\n        var newarray = oldarray;\n        newarray[i] = y_variable;\n        console.log(\"Checking why axis\", newarray);\n        return newarray;\n      }); //setYVariable(text[currentItem[\"variNameI\"]]);\n      // console.log(\"current item is\",text[currentItem[\"variNameI\"]]);\n      // arrayPush('y',currentItem[\"variNameI\"]);\n      // console.log(\"Array\",y_axis);\n    } // if(e.target !== dragNode.current){\n    //     console.log(\"Target is not the same\");\n    //     setList(oldList=>{\n    //         let newList = JSON.parse(JSON.stringify(oldList));\n    //         newList[params.grpI].items.splice(params.itemI,0,newList[currentItem.grpI].items.splice(currentItem.itemI,1)[0]);\n    //         dragItem.current = params;\n    //         return newList;\n    //     })\n    // }\n\n  };\n\n  const handleDragEnd = () => {\n    console.log(\"Ending Drag\");\n    setDragging(false);\n    dragNode.current.removeEventListener(\"dragend\", handleDragEnd);\n    dragItem.current = null;\n    dragNode.current = null;\n  };\n\n  const getStyles = params => {\n    if (dragItem.current.variNameI === params.variNameI) {\n      return \"current dnd-item\";\n    }\n\n    return \"dnd-item\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"50px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"CSV Data Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflow: \"auto\",\n        marginLeft: \"50px\",\n        marginTop: \"50px\",\n        marginBottom: \"50px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"csvtable\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"csvtr\",\n          children: text.map(row => {\n            return /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"csvth\",\n              children: row\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"csvtable\",\n        children: tableData.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"csvtr\",\n          children: row.map(ele => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"csvtd\",\n            children: ele\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"50px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Chose a label for X axis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drag-n-drop\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dnd-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group-title\",\n            children: \"Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), text.map((variName, variNameI) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              draggable: true,\n              onDragStart: e => handleDragStart(e, {\n                variNameI\n              }),\n              onDragEnter: dragging ? e => {\n                handleDragEnter(e, {\n                  variNameI\n                });\n              } : null,\n              className: dragging ? getStyles({\n                variNameI\n              }) : \"dnd-item\",\n              children: variName\n            }, variNameI, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), chartType == \"ChartJs\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dnd-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group-title\",\n              children: \"X-Axis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              draggable: true,\n              onDragEnter: dragging ? e => {\n                handleDragEnter(e, \"X\", 0);\n              } : null,\n              className: \"dnd-item\",\n              children: xVariable\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), chartType === \"ArcChart\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dnd-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group-title\",\n                children: \"Source Node\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                draggable: true,\n                onDragEnter: dragging ? e => {\n                  handleDragEnter(e, \"X\", 1);\n                } : null,\n                className: \"dnd-item\",\n                children: sourceNode\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dnd-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group-title\",\n                children: \"Target Node\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                draggable: true,\n                onDragEnter: dragging ? e => {\n                  handleDragEnter(e, \"X\", 2);\n                } : null,\n                className: \"dnd-item\",\n                children: targetNode\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dnd-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group-title\",\n                children: \"Weight\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                draggable: true,\n                onDragEnter: dragging ? e => {\n                  handleDragEnter(e, \"X\", 3);\n                } : null,\n                className: \"dnd-item\",\n                children: weight\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), chartType === \"ChartJs\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: \"50px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Chose labels for the Y axis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drag-n-drop\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dnd-group grid-col-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group-title\",\n              children: \"Item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 17\n            }, this), textY.map((variName, variNameI) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                draggable: true,\n                onDragStart: e => handleDragStart(e, {\n                  variNameI\n                }),\n                onDragEnter: dragging ? e => {\n                  handleDragEnter(e, {\n                    variNameI\n                  });\n                } : null,\n                className: dragging ? getStyles({\n                  variNameI\n                }) : \"dnd-item\",\n                children: variName\n              }, variNameI, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dnd-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group-title\",\n                children: \"Y-Axis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 19\n              }, this), textY.map((va, vai) => /*#__PURE__*/_jsxDEV(\"div\", {\n                draggable: true,\n                onDragEnter: dragging ? e => {\n                  handleDragEnter(e, \"Y\", vai);\n                } : null,\n                className: \"dnd-item\",\n                children: yVariable[vai]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), chartType === \"ChartJs\" && (xVariable == \"X\" || yVariable.length == 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"50px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"Fill x axis and y axis with variables\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 13\n      }, this), chartType === \"ChartJs\" && !(xVariable == \"X\" || yVariable.length == 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"50px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: load,\n          children: \"Okay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 13\n      }, this), console.log(checkBool), chartType === \"ArcChart\" && (!checkBool || fullfill()) && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"50px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"Give a source node, target node and the weight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 11\n      }, this), chartType === \"ArcChart\" && checkBool && !fullfill() && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"50px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: load,\n          children: \"Okay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ShowData, \"qwjOZ8ZODyPd1Y2vS98i3wTqaFg=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = ShowData;\nexport default ShowData;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowData\");","map":{"version":3,"names":["Papa","React","useState","useRef","useEffect","Navbar","useDispatch","useSelector","charts","chartType","ShowData","csvFile","state","csvhandler","csv","console","log","chart","charttype","includes","text","setText","textY","setTextY","tableData","setTableData","xVariable","setXVariable","sourceNode","setSourceNode","targetNode","setTargetNode","weight","setWeight","yVariable","setYVariable","dragging","setDragging","dragItem","dragNode","x_axis","setX_axis","y_axis","setY_axis","arcData","setArcData","checkBool","setCheckBool","fetch","then","response","responseText","data","Array","parse","out","label_a","data_a","slice","length","textY_arr","map","va","vai","i","isNaN","push","arrayPush","axis","arr","j","indexOf","sub_arr","row","label","l","m","n","load","check","variable","c","fullfill","b","handleDragStart","e","params","current","target","addEventListener","handleDragEnd","setTimeout","handleDragEnter","currentItem","xvariable","y_variable","bool","oldarray","newarray","removeEventListener","getStyles","variNameI","margin","overflow","marginLeft","marginTop","marginBottom","ele","variName","color"],"sources":["D:/Projects/SEP/BetterChartJS/client/src/pages/ShowData/ShowData.jsx"],"sourcesContent":["import Papa from \"papaparse\";\r\nimport \"./ShowData.css\";\r\nimport React, { useState, useRef } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport Navbar from \"../../components/Navbar/Navbar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst charts = [\r\n  \"area\",\r\n  \"bar\",\r\n  \"bubble\",\r\n  \"line\",\r\n  \"pie\",\r\n  \"polar\",\r\n  \"radar\",\r\n  \"scatter\",\r\n];\r\nvar chartType;\r\n\r\nconst ShowData = () => {\r\n  const csvFile = useSelector((state) => state.csvhandler.csv);\r\n  console.log(csvFile);\r\n  const chart = useSelector((state) => state.csvhandler.charttype);\r\n  console.log(chart);\r\n  if (charts.includes(chart)) {\r\n    chartType = \"ChartJs\";\r\n  } else {\r\n    chartType = \"ArcChart\";\r\n  }\r\n\r\n  const [text, setText] = useState([]); //all the labels for x axis\r\n  const [textY, setTextY] = useState([]); //all the lables for Yaxis\r\n  const [tableData, setTableData] = useState([]); //all the data in array format  [[],[],[]]\r\n  const [xVariable, setXVariable] = useState(\"X\"); // Chosen label for Xaxis\r\n  const [sourceNode, setSourceNode] = useState(\"Source Node\");\r\n  const [targetNode, setTargetNode] = useState(\"Target Node\");\r\n  const [weight, setWeight] = useState(\"Weight (Should be a numerical value)\");\r\n  const [yVariable, setYVariable] = useState([]); //Chosen labels in the Yaxis\r\n  const [dragging, setDragging] = useState(false);\r\n  const dragItem = useRef();\r\n  const dragNode = useRef();\r\n  const [x_axis, setX_axis] = useState([]); // [label:[values]]    Data column for the chosen label\r\n  const [y_axis, setY_axis] = useState([]); // [label1:[values1],label2:[values2]]   Data columns for the chosen labels\r\n  const [arcData, setArcData] = useState([]); // [[sourceNode1,TargetNode1,weight1],[sourceNode2,TargetNode2,weight2],[sourceNode3,TargetNode3,weight3]]\r\n  //const arr=[];\r\n  // var count;\r\n  // var chartType = \"ChartJs\"; // chart types are 'ChartJS' and ArcChart\r\n  const [checkBool, setCheckBool] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(csvFile)\r\n      .then((response) => response.text())\r\n      .then((responseText) => {\r\n        // -- parse csv\r\n\r\n        var data = Array(Papa.parse(responseText));\r\n        var out = data[0][\"data\"];\r\n        var label_a = out[0];\r\n        var data_a = out.slice(1, out.length - 1);\r\n        var textY_arr = [];\r\n        setText(out[0]);\r\n        setTableData(out.slice(1, out.length - 1));\r\n        label_a.map((va, vai) => {\r\n          var state = true;\r\n          for (var i = 0; i < data_a.length; i++) {\r\n            if (isNaN(data_a[i][vai])) {\r\n              state = false;\r\n              break;\r\n            }\r\n          }\r\n          if (state == true) {\r\n            textY_arr.push(va);\r\n          }\r\n        });\r\n        setTextY(textY_arr);\r\n        console.log(textY);\r\n      });\r\n  }, []);\r\n\r\n  // const load = async function(){\r\n  //     await fetch( csvFile )\r\n  // .then( response =>  response.text() )\r\n  // .then( responseText => {\r\n  //     // -- parse csv\r\n  //     var data =Array(Papa.parse(responseText));\r\n  //     var out=data[0]['data'];\r\n  //     setText(out[0]);\r\n  //     setTableData(out.slice(1,out.length-1));\r\n  //     console.log('data:', (text));\r\n  // })\r\n  // };\r\n\r\n  //passes \"x\" or \"Y\" and column number\r\n  //1st text use state has to be loaded\r\n  const arrayPush = function (axis) {\r\n    const arr = [];\r\n    var j;\r\n    if (axis == \"x\") {\r\n      j = text.indexOf(xVariable);\r\n      if (j != -1) {\r\n        const sub_arr = [];\r\n        tableData.map((row) => {\r\n          sub_arr.push(row[j]);\r\n        });\r\n        arr[xVariable] = sub_arr;\r\n        setX_axis(arr);\r\n        console.log(\"ARrAY\", arr);\r\n      }\r\n    } else if (axis == \"y\") {\r\n      yVariable.map((label) => {\r\n        j = text.indexOf(label);\r\n        if (j !== -1) {\r\n          const sub_arr = [];\r\n          tableData.map((row) => {\r\n            sub_arr.push(row[j]);\r\n          });\r\n          arr[label] = sub_arr; //labels shud not have the same name.\r\n        }\r\n      });\r\n\r\n      setY_axis(arr);\r\n      console.log(\"ARRAY\", arr);\r\n    } else if ((axis = \"A\")) {\r\n      var l = text.indexOf(sourceNode);\r\n      var m = text.indexOf(targetNode);\r\n      var n = text.indexOf(weight);\r\n      tableData.map((row) => {\r\n        arr.push([row[l], row[m], row[n]]);\r\n      });\r\n      console.log(arr);\r\n      setArcData(arr);\r\n    }\r\n  };\r\n\r\n  const load = () => {\r\n    if (chartType === \"ChartJs\") {\r\n      arrayPush(\"x\");\r\n      arrayPush(\"y\");\r\n    } else if (chartType === \"ArcChart\") {\r\n      arrayPush(\"A\");\r\n    }\r\n  };\r\n\r\n  const check = (variable) => {\r\n    var j = text.indexOf(variable);\r\n    var c = 0;\r\n    for (var i = 0; i < tableData.length; i++) {\r\n      if (isNaN(tableData[i][j])) {\r\n        setWeight(variable + \" (This column contains strings. Enter another)\");\r\n        c += 1;\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (c === 0) {\r\n      console.log(\"came here two\");\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const fullfill = () => {\r\n    var b =\r\n      sourceNode === \"Source Node\" ||\r\n      targetNode === \"Target Node\" ||\r\n      weight === \"Weight (Should be a numerical value)\";\r\n    return b;\r\n  };\r\n\r\n  const handleDragStart = (e, params) => {\r\n    console.log(\"drag starting\", params);\r\n    dragItem.current = params;\r\n    dragNode.current = e.target;\r\n    dragNode.current.addEventListener(\"dragend\", handleDragEnd);\r\n    setTimeout(() => {\r\n      setDragging(true);\r\n    }, 0);\r\n  };\r\n\r\n  const handleDragEnter = (e, params, i) => {\r\n    console.log(\"Enteringg drag\", params);\r\n    const currentItem = dragItem.current;\r\n    const xvariable = text[currentItem[\"variNameI\"]];\r\n    const y_variable = textY[currentItem[\"variNameI\"]];\r\n    if (params === \"X\") {\r\n      if (i == 0) {\r\n        setXVariable(xvariable);\r\n      } else if (i == 1) {\r\n        setSourceNode(xvariable);\r\n      } else if (i == 2) {\r\n        setTargetNode(xvariable);\r\n      } else if (i == 3) {\r\n        setWeight(xvariable);\r\n      }\r\n\r\n      if (i === 3) {\r\n        var bool = check(xvariable);\r\n        console.log(\"State : \", bool);\r\n        setCheckBool(bool);\r\n      }\r\n    } else if (params === \"Y\" && !yVariable.includes(y_variable)) {\r\n      setYVariable((oldarray) => {\r\n        var newarray = oldarray;\r\n        newarray[i] = y_variable;\r\n        console.log(\"Checking why axis\", newarray);\r\n        return newarray;\r\n      });\r\n      //setYVariable(text[currentItem[\"variNameI\"]]);\r\n      // console.log(\"current item is\",text[currentItem[\"variNameI\"]]);\r\n      // arrayPush('y',currentItem[\"variNameI\"]);\r\n      // console.log(\"Array\",y_axis);\r\n    }\r\n    // if(e.target !== dragNode.current){\r\n    //     console.log(\"Target is not the same\");\r\n    //     setList(oldList=>{\r\n    //         let newList = JSON.parse(JSON.stringify(oldList));\r\n    //         newList[params.grpI].items.splice(params.itemI,0,newList[currentItem.grpI].items.splice(currentItem.itemI,1)[0]);\r\n    //         dragItem.current = params;\r\n    //         return newList;\r\n    //     })\r\n    // }\r\n  };\r\n\r\n  const handleDragEnd = () => {\r\n    console.log(\"Ending Drag\");\r\n    setDragging(false);\r\n    dragNode.current.removeEventListener(\"dragend\", handleDragEnd);\r\n    dragItem.current = null;\r\n    dragNode.current = null;\r\n  };\r\n\r\n  const getStyles = (params) => {\r\n    if (dragItem.current.variNameI === params.variNameI) {\r\n      return \"current dnd-item\";\r\n    }\r\n    return \"dnd-item\";\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      {/* <button onClick={ load }>load</button>\r\n            <h2>text:</h2> */}\r\n      <div style={{ margin: \"50px\" }}>\r\n        <h2>CSV Data Table</h2>\r\n      </div>\r\n      <div\r\n        style={{\r\n          overflow: \"auto\",\r\n          marginLeft: \"50px\",\r\n          marginTop: \"50px\",\r\n          marginBottom: \"50px\",\r\n        }}\r\n      >\r\n        <thead className=\"csvtable\">\r\n          <tr className=\"csvtr\">\r\n            {text.map((row) => {\r\n              return <th className=\"csvth\">{row}</th>;\r\n            })}\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"csvtable\">\r\n          {tableData.map((row) => (\r\n            <tr className=\"csvtr\">\r\n              {row.map((ele) => (\r\n                <td className=\"csvtd\">{ele}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </div>\r\n      <div>\r\n        <div style={{ margin: \"50px\" }}>\r\n          <h2>Chose a label for X axis</h2>\r\n        </div>\r\n        <div className=\"drag-n-drop\">\r\n          <div className=\"dnd-group\">\r\n            <div className=\"group-title\">Item</div>\r\n            {text.map((variName, variNameI) => {\r\n              return (\r\n                <div\r\n                  draggable\r\n                  onDragStart={(e) => handleDragStart(e, { variNameI })}\r\n                  onDragEnter={\r\n                    dragging\r\n                      ? (e) => {\r\n                          handleDragEnter(e, { variNameI });\r\n                        }\r\n                      : null\r\n                  }\r\n                  key={variNameI}\r\n                  className={dragging ? getStyles({ variNameI }) : \"dnd-item\"}\r\n                >\r\n                  {variName}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          {chartType == \"ChartJs\" && (\r\n            <div>\r\n              <div className=\"dnd-group\">\r\n                <div className=\"group-title\">X-Axis</div>\r\n                <div\r\n                  draggable\r\n                  onDragEnter={\r\n                    dragging\r\n                      ? (e) => {\r\n                          handleDragEnter(e, \"X\", 0);\r\n                        }\r\n                      : null\r\n                  }\r\n                  className=\"dnd-item\"\r\n                >\r\n                  {xVariable}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {chartType === \"ArcChart\" && (\r\n            <>\r\n              <div>\r\n                <div className=\"dnd-group\">\r\n                  <div className=\"group-title\">Source Node</div>\r\n                  <div\r\n                    draggable\r\n                    onDragEnter={\r\n                      dragging\r\n                        ? (e) => {\r\n                            handleDragEnter(e, \"X\", 1);\r\n                          }\r\n                        : null\r\n                    }\r\n                    className=\"dnd-item\"\r\n                  >\r\n                    {sourceNode}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <div className=\"dnd-group\">\r\n                  <div className=\"group-title\">Target Node</div>\r\n                  <div\r\n                    draggable\r\n                    onDragEnter={\r\n                      dragging\r\n                        ? (e) => {\r\n                            handleDragEnter(e, \"X\", 2);\r\n                          }\r\n                        : null\r\n                    }\r\n                    className=\"dnd-item\"\r\n                  >\r\n                    {targetNode}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <div className=\"dnd-group\">\r\n                  <div className=\"group-title\">Weight</div>\r\n                  <div\r\n                    draggable\r\n                    onDragEnter={\r\n                      dragging\r\n                        ? (e) => {\r\n                            handleDragEnter(e, \"X\", 3);\r\n                          }\r\n                        : null\r\n                    }\r\n                    className=\"dnd-item\"\r\n                  >\r\n                    {weight}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n        {chartType === \"ChartJs\" && (\r\n          <>\r\n            <div style={{ margin: \"50px\" }}>\r\n              <h2>Chose labels for the Y axis</h2>\r\n            </div>\r\n            <div className=\"drag-n-drop\">\r\n              <div className=\"dnd-group grid-col-3\">\r\n                <div className=\"group-title\">Item</div>\r\n                {textY.map((variName, variNameI) => {\r\n                  return (\r\n                    <div\r\n                      draggable\r\n                      onDragStart={(e) => handleDragStart(e, { variNameI })}\r\n                      onDragEnter={\r\n                        dragging\r\n                          ? (e) => {\r\n                              handleDragEnter(e, { variNameI });\r\n                            }\r\n                          : null\r\n                      }\r\n                      key={variNameI}\r\n                      className={\r\n                        dragging ? getStyles({ variNameI }) : \"dnd-item\"\r\n                      }\r\n                    >\r\n                      {variName}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              <div>\r\n                <div className=\"dnd-group\">\r\n                  <div className=\"group-title\">Y-Axis</div>\r\n                  {textY.map((va, vai) => (\r\n                    <div\r\n                      draggable\r\n                      onDragEnter={\r\n                        dragging\r\n                          ? (e) => {\r\n                              handleDragEnter(e, \"Y\", vai);\r\n                            }\r\n                          : null\r\n                      }\r\n                      className=\"dnd-item\"\r\n                    >\r\n                      {yVariable[vai]}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {chartType === \"ChartJs\" &&\r\n          (xVariable == \"X\" || yVariable.length == 0) && (\r\n            <div style={{ margin: \"50px\" }}>\r\n              <h3 style={{ color: \"red\" }}>\r\n                Fill x axis and y axis with variables\r\n              </h3>\r\n            </div>\r\n          )}\r\n        {chartType === \"ChartJs\" &&\r\n          !(xVariable == \"X\" || yVariable.length == 0) && (\r\n            <div style={{ margin: \"50px\" }}>\r\n              <button onClick={load}>Okay</button>\r\n            </div>\r\n          )}\r\n        {console.log(checkBool)}\r\n        {chartType === \"ArcChart\" && (!checkBool || fullfill()) && (\r\n          <div style={{ margin: \"50px\" }}>\r\n            <h3 style={{ color: \"red\" }}>\r\n              Give a source node, target node and the weight\r\n            </h3>\r\n          </div>\r\n        )}\r\n        {chartType === \"ArcChart\" && checkBool && !fullfill() && (\r\n          <div style={{ margin: \"50px\" }}>\r\n            <button onClick={load}>Okay</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowData;\r\n"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAO,gBAAP;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAEA,MAAMC,MAAM,GAAG,CACb,MADa,EAEb,KAFa,EAGb,QAHa,EAIb,MAJa,EAKb,KALa,EAMb,OANa,EAOb,OAPa,EAQb,SARa,CAAf;AAUA,IAAIC,SAAJ;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAMC,OAAO,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBC,GAA7B,CAA3B;EACAC,OAAO,CAACC,GAAR,CAAYL,OAAZ;EACA,MAAMM,KAAK,GAAGV,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBK,SAA7B,CAAzB;EACAH,OAAO,CAACC,GAAR,CAAYC,KAAZ;;EACA,IAAIT,MAAM,CAACW,QAAP,CAAgBF,KAAhB,CAAJ,EAA4B;IAC1BR,SAAS,GAAG,SAAZ;EACD,CAFD,MAEO;IACLA,SAAS,GAAG,UAAZ;EACD;;EAED,MAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,EAAD,CAAhC,CAXqB,CAWiB;;EACtC,MAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,EAAD,CAAlC,CAZqB,CAYmB;;EACxC,MAAM,CAACsB,SAAD,EAAYC,YAAZ,IAA4BvB,QAAQ,CAAC,EAAD,CAA1C,CAbqB,CAa2B;;EAChD,MAAM,CAACwB,SAAD,EAAYC,YAAZ,IAA4BzB,QAAQ,CAAC,GAAD,CAA1C,CAdqB,CAc4B;;EACjD,MAAM,CAAC0B,UAAD,EAAaC,aAAb,IAA8B3B,QAAQ,CAAC,aAAD,CAA5C;EACA,MAAM,CAAC4B,UAAD,EAAaC,aAAb,IAA8B7B,QAAQ,CAAC,aAAD,CAA5C;EACA,MAAM,CAAC8B,MAAD,EAASC,SAAT,IAAsB/B,QAAQ,CAAC,sCAAD,CAApC;EACA,MAAM,CAACgC,SAAD,EAAYC,YAAZ,IAA4BjC,QAAQ,CAAC,EAAD,CAA1C,CAlBqB,CAkB2B;;EAChD,MAAM,CAACkC,QAAD,EAAWC,WAAX,IAA0BnC,QAAQ,CAAC,KAAD,CAAxC;EACA,MAAMoC,QAAQ,GAAGnC,MAAM,EAAvB;EACA,MAAMoC,QAAQ,GAAGpC,MAAM,EAAvB;EACA,MAAM,CAACqC,MAAD,EAASC,SAAT,IAAsBvC,QAAQ,CAAC,EAAD,CAApC,CAtBqB,CAsBqB;;EAC1C,MAAM,CAACwC,MAAD,EAASC,SAAT,IAAsBzC,QAAQ,CAAC,EAAD,CAApC,CAvBqB,CAuBqB;;EAC1C,MAAM,CAAC0C,OAAD,EAAUC,UAAV,IAAwB3C,QAAQ,CAAC,EAAD,CAAtC,CAxBqB,CAwBuB;EAC5C;EACA;EACA;;EACA,MAAM,CAAC4C,SAAD,EAAYC,YAAZ,IAA4B7C,QAAQ,CAAC,KAAD,CAA1C;EAEAE,SAAS,CAAC,MAAM;IACd4C,KAAK,CAACrC,OAAD,CAAL,CACGsC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAAC9B,IAAT,EADtB,EAEG6B,IAFH,CAESE,YAAD,IAAkB;MACtB;MAEA,IAAIC,IAAI,GAAGC,KAAK,CAACrD,IAAI,CAACsD,KAAL,CAAWH,YAAX,CAAD,CAAhB;MACA,IAAII,GAAG,GAAGH,IAAI,CAAC,CAAD,CAAJ,CAAQ,MAAR,CAAV;MACA,IAAII,OAAO,GAAGD,GAAG,CAAC,CAAD,CAAjB;MACA,IAAIE,MAAM,GAAGF,GAAG,CAACG,KAAJ,CAAU,CAAV,EAAaH,GAAG,CAACI,MAAJ,GAAa,CAA1B,CAAb;MACA,IAAIC,SAAS,GAAG,EAAhB;MACAvC,OAAO,CAACkC,GAAG,CAAC,CAAD,CAAJ,CAAP;MACA9B,YAAY,CAAC8B,GAAG,CAACG,KAAJ,CAAU,CAAV,EAAaH,GAAG,CAACI,MAAJ,GAAa,CAA1B,CAAD,CAAZ;MACAH,OAAO,CAACK,GAAR,CAAY,CAACC,EAAD,EAAKC,GAAL,KAAa;QACvB,IAAInD,KAAK,GAAG,IAAZ;;QACA,KAAK,IAAIoD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,MAAM,CAACE,MAA3B,EAAmCK,CAAC,EAApC,EAAwC;UACtC,IAAIC,KAAK,CAACR,MAAM,CAACO,CAAD,CAAN,CAAUD,GAAV,CAAD,CAAT,EAA2B;YACzBnD,KAAK,GAAG,KAAR;YACA;UACD;QACF;;QACD,IAAIA,KAAK,IAAI,IAAb,EAAmB;UACjBgD,SAAS,CAACM,IAAV,CAAeJ,EAAf;QACD;MACF,CAXD;MAYAvC,QAAQ,CAACqC,SAAD,CAAR;MACA7C,OAAO,CAACC,GAAR,CAAYM,KAAZ;IACD,CA1BH;EA2BD,CA5BQ,EA4BN,EA5BM,CAAT,CA9BqB,CA4DrB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;;EACA,MAAM6C,SAAS,GAAG,UAAUC,IAAV,EAAgB;IAChC,MAAMC,GAAG,GAAG,EAAZ;IACA,IAAIC,CAAJ;;IACA,IAAIF,IAAI,IAAI,GAAZ,EAAiB;MACfE,CAAC,GAAGlD,IAAI,CAACmD,OAAL,CAAa7C,SAAb,CAAJ;;MACA,IAAI4C,CAAC,IAAI,CAAC,CAAV,EAAa;QACX,MAAME,OAAO,GAAG,EAAhB;QACAhD,SAAS,CAACqC,GAAV,CAAeY,GAAD,IAAS;UACrBD,OAAO,CAACN,IAAR,CAAaO,GAAG,CAACH,CAAD,CAAhB;QACD,CAFD;QAGAD,GAAG,CAAC3C,SAAD,CAAH,GAAiB8C,OAAjB;QACA/B,SAAS,CAAC4B,GAAD,CAAT;QACAtD,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBqD,GAArB;MACD;IACF,CAXD,MAWO,IAAID,IAAI,IAAI,GAAZ,EAAiB;MACtBlC,SAAS,CAAC2B,GAAV,CAAea,KAAD,IAAW;QACvBJ,CAAC,GAAGlD,IAAI,CAACmD,OAAL,CAAaG,KAAb,CAAJ;;QACA,IAAIJ,CAAC,KAAK,CAAC,CAAX,EAAc;UACZ,MAAME,OAAO,GAAG,EAAhB;UACAhD,SAAS,CAACqC,GAAV,CAAeY,GAAD,IAAS;YACrBD,OAAO,CAACN,IAAR,CAAaO,GAAG,CAACH,CAAD,CAAhB;UACD,CAFD;UAGAD,GAAG,CAACK,KAAD,CAAH,GAAaF,OAAb,CALY,CAKU;QACvB;MACF,CATD;MAWA7B,SAAS,CAAC0B,GAAD,CAAT;MACAtD,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBqD,GAArB;IACD,CAdM,MAcA,IAAKD,IAAI,GAAG,GAAZ,EAAkB;MACvB,IAAIO,CAAC,GAAGvD,IAAI,CAACmD,OAAL,CAAa3C,UAAb,CAAR;MACA,IAAIgD,CAAC,GAAGxD,IAAI,CAACmD,OAAL,CAAazC,UAAb,CAAR;MACA,IAAI+C,CAAC,GAAGzD,IAAI,CAACmD,OAAL,CAAavC,MAAb,CAAR;MACAR,SAAS,CAACqC,GAAV,CAAeY,GAAD,IAAS;QACrBJ,GAAG,CAACH,IAAJ,CAAS,CAACO,GAAG,CAACE,CAAD,CAAJ,EAASF,GAAG,CAACG,CAAD,CAAZ,EAAiBH,GAAG,CAACI,CAAD,CAApB,CAAT;MACD,CAFD;MAGA9D,OAAO,CAACC,GAAR,CAAYqD,GAAZ;MACAxB,UAAU,CAACwB,GAAD,CAAV;IACD;EACF,CAtCD;;EAwCA,MAAMS,IAAI,GAAG,MAAM;IACjB,IAAIrE,SAAS,KAAK,SAAlB,EAA6B;MAC3B0D,SAAS,CAAC,GAAD,CAAT;MACAA,SAAS,CAAC,GAAD,CAAT;IACD,CAHD,MAGO,IAAI1D,SAAS,KAAK,UAAlB,EAA8B;MACnC0D,SAAS,CAAC,GAAD,CAAT;IACD;EACF,CAPD;;EASA,MAAMY,KAAK,GAAIC,QAAD,IAAc;IAC1B,IAAIV,CAAC,GAAGlD,IAAI,CAACmD,OAAL,CAAaS,QAAb,CAAR;IACA,IAAIC,CAAC,GAAG,CAAR;;IACA,KAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGxC,SAAS,CAACmC,MAA9B,EAAsCK,CAAC,EAAvC,EAA2C;MACzC,IAAIC,KAAK,CAACzC,SAAS,CAACwC,CAAD,CAAT,CAAaM,CAAb,CAAD,CAAT,EAA4B;QAC1BrC,SAAS,CAAC+C,QAAQ,GAAG,gDAAZ,CAAT;QACAC,CAAC,IAAI,CAAL;QACA,OAAO,KAAP;MACD;IACF;;IAED,IAAIA,CAAC,KAAK,CAAV,EAAa;MACXlE,OAAO,CAACC,GAAR,CAAY,eAAZ;MACA,OAAO,IAAP;IACD;EACF,CAfD;;EAiBA,MAAMkE,QAAQ,GAAG,MAAM;IACrB,IAAIC,CAAC,GACHvD,UAAU,KAAK,aAAf,IACAE,UAAU,KAAK,aADf,IAEAE,MAAM,KAAK,sCAHb;IAIA,OAAOmD,CAAP;EACD,CAND;;EAQA,MAAMC,eAAe,GAAG,CAACC,CAAD,EAAIC,MAAJ,KAAe;IACrCvE,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BsE,MAA7B;IACAhD,QAAQ,CAACiD,OAAT,GAAmBD,MAAnB;IACA/C,QAAQ,CAACgD,OAAT,GAAmBF,CAAC,CAACG,MAArB;IACAjD,QAAQ,CAACgD,OAAT,CAAiBE,gBAAjB,CAAkC,SAAlC,EAA6CC,aAA7C;IACAC,UAAU,CAAC,MAAM;MACftD,WAAW,CAAC,IAAD,CAAX;IACD,CAFS,EAEP,CAFO,CAAV;EAGD,CARD;;EAUA,MAAMuD,eAAe,GAAG,CAACP,CAAD,EAAIC,MAAJ,EAAYtB,CAAZ,KAAkB;IACxCjD,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BsE,MAA9B;IACA,MAAMO,WAAW,GAAGvD,QAAQ,CAACiD,OAA7B;IACA,MAAMO,SAAS,GAAG1E,IAAI,CAACyE,WAAW,CAAC,WAAD,CAAZ,CAAtB;IACA,MAAME,UAAU,GAAGzE,KAAK,CAACuE,WAAW,CAAC,WAAD,CAAZ,CAAxB;;IACA,IAAIP,MAAM,KAAK,GAAf,EAAoB;MAClB,IAAItB,CAAC,IAAI,CAAT,EAAY;QACVrC,YAAY,CAACmE,SAAD,CAAZ;MACD,CAFD,MAEO,IAAI9B,CAAC,IAAI,CAAT,EAAY;QACjBnC,aAAa,CAACiE,SAAD,CAAb;MACD,CAFM,MAEA,IAAI9B,CAAC,IAAI,CAAT,EAAY;QACjBjC,aAAa,CAAC+D,SAAD,CAAb;MACD,CAFM,MAEA,IAAI9B,CAAC,IAAI,CAAT,EAAY;QACjB/B,SAAS,CAAC6D,SAAD,CAAT;MACD;;MAED,IAAI9B,CAAC,KAAK,CAAV,EAAa;QACX,IAAIgC,IAAI,GAAGjB,KAAK,CAACe,SAAD,CAAhB;QACA/E,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBgF,IAAxB;QACAjD,YAAY,CAACiD,IAAD,CAAZ;MACD;IACF,CAhBD,MAgBO,IAAIV,MAAM,KAAK,GAAX,IAAkB,CAACpD,SAAS,CAACf,QAAV,CAAmB4E,UAAnB,CAAvB,EAAuD;MAC5D5D,YAAY,CAAE8D,QAAD,IAAc;QACzB,IAAIC,QAAQ,GAAGD,QAAf;QACAC,QAAQ,CAAClC,CAAD,CAAR,GAAc+B,UAAd;QACAhF,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCkF,QAAjC;QACA,OAAOA,QAAP;MACD,CALW,CAAZ,CAD4D,CAO5D;MACA;MACA;MACA;IACD,CAhCuC,CAiCxC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;EACD,CA1CD;;EA4CA,MAAMR,aAAa,GAAG,MAAM;IAC1B3E,OAAO,CAACC,GAAR,CAAY,aAAZ;IACAqB,WAAW,CAAC,KAAD,CAAX;IACAE,QAAQ,CAACgD,OAAT,CAAiBY,mBAAjB,CAAqC,SAArC,EAAgDT,aAAhD;IACApD,QAAQ,CAACiD,OAAT,GAAmB,IAAnB;IACAhD,QAAQ,CAACgD,OAAT,GAAmB,IAAnB;EACD,CAND;;EAQA,MAAMa,SAAS,GAAId,MAAD,IAAY;IAC5B,IAAIhD,QAAQ,CAACiD,OAAT,CAAiBc,SAAjB,KAA+Bf,MAAM,CAACe,SAA1C,EAAqD;MACnD,OAAO,kBAAP;IACD;;IACD,OAAO,UAAP;EACD,CALD;;EAOA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAK,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAV,CAAZ;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAJF,eAOE;MACE,KAAK,EAAE;QACLC,QAAQ,EAAE,MADL;QAELC,UAAU,EAAE,MAFP;QAGLC,SAAS,EAAE,MAHN;QAILC,YAAY,EAAE;MAJT,CADT;MAAA,wBAQE;QAAO,SAAS,EAAC,UAAjB;QAAA,uBACE;UAAI,SAAS,EAAC,OAAd;UAAA,UACGtF,IAAI,CAACyC,GAAL,CAAUY,GAAD,IAAS;YACjB,oBAAO;cAAI,SAAS,EAAC,OAAd;cAAA,UAAuBA;YAAvB;cAAA;cAAA;cAAA;YAAA,QAAP;UACD,CAFA;QADH;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QARF,eAeE;QAAO,SAAS,EAAC,UAAjB;QAAA,UACGjD,SAAS,CAACqC,GAAV,CAAeY,GAAD,iBACb;UAAI,SAAS,EAAC,OAAd;UAAA,UACGA,GAAG,CAACZ,GAAJ,CAAS8C,GAAD,iBACP;YAAI,SAAS,EAAC,OAAd;YAAA,UAAuBA;UAAvB;YAAA;YAAA;YAAA;UAAA,QADD;QADH;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA,QAfF;IAAA;MAAA;MAAA;MAAA;IAAA,QAPF,eAgCE;MAAA,wBACE;QAAK,KAAK,EAAE;UAAEL,MAAM,EAAE;QAAV,CAAZ;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAIE;QAAK,SAAS,EAAC,aAAf;QAAA,wBACE;UAAK,SAAS,EAAC,WAAf;UAAA,wBACE;YAAK,SAAS,EAAC,aAAf;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,EAEGlF,IAAI,CAACyC,GAAL,CAAS,CAAC+C,QAAD,EAAWP,SAAX,KAAyB;YACjC,oBACE;cACE,SAAS,MADX;cAEE,WAAW,EAAGhB,CAAD,IAAOD,eAAe,CAACC,CAAD,EAAI;gBAAEgB;cAAF,CAAJ,CAFrC;cAGE,WAAW,EACTjE,QAAQ,GACHiD,CAAD,IAAO;gBACLO,eAAe,CAACP,CAAD,EAAI;kBAAEgB;gBAAF,CAAJ,CAAf;cACD,CAHG,GAIJ,IARR;cAWE,SAAS,EAAEjE,QAAQ,GAAGgE,SAAS,CAAC;gBAAEC;cAAF,CAAD,CAAZ,GAA8B,UAXnD;cAAA,UAaGO;YAbH,GAUOP,SAVP;cAAA;cAAA;cAAA;YAAA,QADF;UAiBD,CAlBA,CAFH;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,EAuBG5F,SAAS,IAAI,SAAb,iBACC;UAAA,uBACE;YAAK,SAAS,EAAC,WAAf;YAAA,wBACE;cAAK,SAAS,EAAC,aAAf;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cACE,SAAS,MADX;cAEE,WAAW,EACT2B,QAAQ,GACHiD,CAAD,IAAO;gBACLO,eAAe,CAACP,CAAD,EAAI,GAAJ,EAAS,CAAT,CAAf;cACD,CAHG,GAIJ,IAPR;cASE,SAAS,EAAC,UATZ;cAAA,UAWG3D;YAXH;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAxBJ,EA4CGjB,SAAS,KAAK,UAAd,iBACC;UAAA,wBACE;YAAA,uBACE;cAAK,SAAS,EAAC,WAAf;cAAA,wBACE;gBAAK,SAAS,EAAC,aAAf;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAEE;gBACE,SAAS,MADX;gBAEE,WAAW,EACT2B,QAAQ,GACHiD,CAAD,IAAO;kBACLO,eAAe,CAACP,CAAD,EAAI,GAAJ,EAAS,CAAT,CAAf;gBACD,CAHG,GAIJ,IAPR;gBASE,SAAS,EAAC,UATZ;gBAAA,UAWGzD;cAXH;gBAAA;gBAAA;gBAAA;cAAA,QAFF;YAAA;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QADF,eAoBE;YAAA,uBACE;cAAK,SAAS,EAAC,WAAf;cAAA,wBACE;gBAAK,SAAS,EAAC,aAAf;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAEE;gBACE,SAAS,MADX;gBAEE,WAAW,EACTQ,QAAQ,GACHiD,CAAD,IAAO;kBACLO,eAAe,CAACP,CAAD,EAAI,GAAJ,EAAS,CAAT,CAAf;gBACD,CAHG,GAIJ,IAPR;gBASE,SAAS,EAAC,UATZ;gBAAA,UAWGvD;cAXH;gBAAA;gBAAA;gBAAA;cAAA,QAFF;YAAA;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QApBF,eAuCE;YAAA,uBACE;cAAK,SAAS,EAAC,WAAf;cAAA,wBACE;gBAAK,SAAS,EAAC,aAAf;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAEE;gBACE,SAAS,MADX;gBAEE,WAAW,EACTM,QAAQ,GACHiD,CAAD,IAAO;kBACLO,eAAe,CAACP,CAAD,EAAI,GAAJ,EAAS,CAAT,CAAf;gBACD,CAHG,GAIJ,IAPR;gBASE,SAAS,EAAC,UATZ;gBAAA,UAWGrD;cAXH;gBAAA;gBAAA;gBAAA;cAAA,QAFF;YAAA;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QAvCF;QAAA,gBA7CJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,EA6GGvB,SAAS,KAAK,SAAd,iBACC;QAAA,wBACE;UAAK,KAAK,EAAE;YAAE6F,MAAM,EAAE;UAAV,CAAZ;UAAA,uBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QADF,eAIE;UAAK,SAAS,EAAC,aAAf;UAAA,wBACE;YAAK,SAAS,EAAC,sBAAf;YAAA,wBACE;cAAK,SAAS,EAAC,aAAf;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,EAEGhF,KAAK,CAACuC,GAAN,CAAU,CAAC+C,QAAD,EAAWP,SAAX,KAAyB;cAClC,oBACE;gBACE,SAAS,MADX;gBAEE,WAAW,EAAGhB,CAAD,IAAOD,eAAe,CAACC,CAAD,EAAI;kBAAEgB;gBAAF,CAAJ,CAFrC;gBAGE,WAAW,EACTjE,QAAQ,GACHiD,CAAD,IAAO;kBACLO,eAAe,CAACP,CAAD,EAAI;oBAAEgB;kBAAF,CAAJ,CAAf;gBACD,CAHG,GAIJ,IARR;gBAWE,SAAS,EACPjE,QAAQ,GAAGgE,SAAS,CAAC;kBAAEC;gBAAF,CAAD,CAAZ,GAA8B,UAZ1C;gBAAA,UAeGO;cAfH,GAUOP,SAVP;gBAAA;gBAAA;gBAAA;cAAA,QADF;YAmBD,CApBA,CAFH;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAyBE;YAAA,uBACE;cAAK,SAAS,EAAC,WAAf;cAAA,wBACE;gBAAK,SAAS,EAAC,aAAf;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADF,EAEG/E,KAAK,CAACuC,GAAN,CAAU,CAACC,EAAD,EAAKC,GAAL,kBACT;gBACE,SAAS,MADX;gBAEE,WAAW,EACT3B,QAAQ,GACHiD,CAAD,IAAO;kBACLO,eAAe,CAACP,CAAD,EAAI,GAAJ,EAAStB,GAAT,CAAf;gBACD,CAHG,GAIJ,IAPR;gBASE,SAAS,EAAC,UATZ;gBAAA,UAWG7B,SAAS,CAAC6B,GAAD;cAXZ;gBAAA;gBAAA;gBAAA;cAAA,QADD,CAFH;YAAA;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QAzBF;QAAA;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA,gBA9GJ,EAmKGtD,SAAS,KAAK,SAAd,KACEiB,SAAS,IAAI,GAAb,IAAoBQ,SAAS,CAACyB,MAAV,IAAoB,CAD1C,kBAEG;QAAK,KAAK,EAAE;UAAE2C,MAAM,EAAE;QAAV,CAAZ;QAAA,uBACE;UAAI,KAAK,EAAE;YAAEO,KAAK,EAAE;UAAT,CAAX;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QArKN,EA2KGpG,SAAS,KAAK,SAAd,IACC,EAAEiB,SAAS,IAAI,GAAb,IAAoBQ,SAAS,CAACyB,MAAV,IAAoB,CAA1C,CADD,iBAEG;QAAK,KAAK,EAAE;UAAE2C,MAAM,EAAE;QAAV,CAAZ;QAAA,uBACE;UAAQ,OAAO,EAAExB,IAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QA7KN,EAiLG/D,OAAO,CAACC,GAAR,CAAY8B,SAAZ,CAjLH,EAkLGrC,SAAS,KAAK,UAAd,KAA6B,CAACqC,SAAD,IAAcoC,QAAQ,EAAnD,kBACC;QAAK,KAAK,EAAE;UAAEoB,MAAM,EAAE;QAAV,CAAZ;QAAA,uBACE;UAAI,KAAK,EAAE;YAAEO,KAAK,EAAE;UAAT,CAAX;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAnLJ,EAyLGpG,SAAS,KAAK,UAAd,IAA4BqC,SAA5B,IAAyC,CAACoC,QAAQ,EAAlD,iBACC;QAAK,KAAK,EAAE;UAAEoB,MAAM,EAAE;QAAV,CAAZ;QAAA,uBACE;UAAQ,OAAO,EAAExB,IAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QA1LJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAhCF;EAAA,gBADF;AAkOD,CA5bD;;GAAMpE,Q;UACYH,W,EAEFA,W;;;KAHVG,Q;AA8bN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}