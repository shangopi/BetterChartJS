{"ast":null,"code":"const ArcLogic = data => {\n  const sourceNode = [];\n  const targetNode = [];\n  const weights = [];\n  var allNodesNo;\n\n  for (var i = 0; i < data.length; i++) {\n    if (data[i][2] === '') {\n      weights.push(Number(0));\n    } else {\n      weights.push(Number(data[i][2]));\n    }\n\n    if (!sourceNode.includes(data[i][0])) {\n      sourceNode.push(data[i][0]);\n    }\n  }\n\n  for (let i = 0; i < data.length; i++) {\n    if (!sourceNode.includes(data[i][1]) && !targetNode.includes(data[i][1])) {\n      targetNode.push(data[i][1]);\n    }\n  }\n\n  allNodesNo = sourceNode.length + targetNode.length;\n  const allNodeList = [...sourceNode, ...targetNode];\n  console.log([sourceNode, targetNode, weights, allNodeList, allNodesNo]);\n  return [sourceNode, targetNode, weights, allNodeList, allNodesNo];\n};\n\n_c = ArcLogic;\nexport default ArcLogic;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArcLogic\");","map":{"version":3,"names":["ArcLogic","data","sourceNode","targetNode","weights","allNodesNo","i","length","push","Number","includes","allNodeList","console","log"],"sources":["C:/Users/shang/gitrepo/BetterChartJS/client/src/components/Chart_Components/Logic/ArcLogic.js"],"sourcesContent":["\r\nconst ArcLogic = (data) =>{\r\n    const sourceNode=[];\r\n    const targetNode=[];\r\n    const weights=[];\r\n    var allNodesNo;\r\n    for(var i=0;i<data.length;i++){\r\n        if(data[i][2]===''){\r\n            weights.push(Number(0));\r\n        }\r\n        else{\r\n            weights.push(Number(data[i][2]));\r\n        }\r\n        \r\n        if(!sourceNode.includes(data[i][0])){\r\n            sourceNode.push(data[i][0]);\r\n        }\r\n    }\r\n\r\n    for(let i=0;i<data.length;i++){\r\n        if(!sourceNode.includes(data[i][1]) && !targetNode.includes(data[i][1])){\r\n            targetNode.push(data[i][1]);\r\n        }\r\n    }\r\n    allNodesNo=sourceNode.length+targetNode.length;\r\n    const allNodeList=[...sourceNode,...targetNode];\r\n    console.log([sourceNode,targetNode,weights,allNodeList,allNodesNo]);\r\n    return [sourceNode,targetNode,weights,allNodeList,allNodesNo]\r\n\r\n}\r\n\r\nexport default ArcLogic"],"mappings":"AACA,MAAMA,QAAQ,GAAIC,IAAD,IAAS;EACtB,MAAMC,UAAU,GAAC,EAAjB;EACA,MAAMC,UAAU,GAAC,EAAjB;EACA,MAAMC,OAAO,GAAC,EAAd;EACA,IAAIC,UAAJ;;EACA,KAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACL,IAAI,CAACM,MAAnB,EAA0BD,CAAC,EAA3B,EAA8B;IAC1B,IAAGL,IAAI,CAACK,CAAD,CAAJ,CAAQ,CAAR,MAAa,EAAhB,EAAmB;MACfF,OAAO,CAACI,IAAR,CAAaC,MAAM,CAAC,CAAD,CAAnB;IACH,CAFD,MAGI;MACAL,OAAO,CAACI,IAAR,CAAaC,MAAM,CAACR,IAAI,CAACK,CAAD,CAAJ,CAAQ,CAAR,CAAD,CAAnB;IACH;;IAED,IAAG,CAACJ,UAAU,CAACQ,QAAX,CAAoBT,IAAI,CAACK,CAAD,CAAJ,CAAQ,CAAR,CAApB,CAAJ,EAAoC;MAChCJ,UAAU,CAACM,IAAX,CAAgBP,IAAI,CAACK,CAAD,CAAJ,CAAQ,CAAR,CAAhB;IACH;EACJ;;EAED,KAAI,IAAIA,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACL,IAAI,CAACM,MAAnB,EAA0BD,CAAC,EAA3B,EAA8B;IAC1B,IAAG,CAACJ,UAAU,CAACQ,QAAX,CAAoBT,IAAI,CAACK,CAAD,CAAJ,CAAQ,CAAR,CAApB,CAAD,IAAoC,CAACH,UAAU,CAACO,QAAX,CAAoBT,IAAI,CAACK,CAAD,CAAJ,CAAQ,CAAR,CAApB,CAAxC,EAAwE;MACpEH,UAAU,CAACK,IAAX,CAAgBP,IAAI,CAACK,CAAD,CAAJ,CAAQ,CAAR,CAAhB;IACH;EACJ;;EACDD,UAAU,GAACH,UAAU,CAACK,MAAX,GAAkBJ,UAAU,CAACI,MAAxC;EACA,MAAMI,WAAW,GAAC,CAAC,GAAGT,UAAJ,EAAe,GAAGC,UAAlB,CAAlB;EACAS,OAAO,CAACC,GAAR,CAAY,CAACX,UAAD,EAAYC,UAAZ,EAAuBC,OAAvB,EAA+BO,WAA/B,EAA2CN,UAA3C,CAAZ;EACA,OAAO,CAACH,UAAD,EAAYC,UAAZ,EAAuBC,OAAvB,EAA+BO,WAA/B,EAA2CN,UAA3C,CAAP;AAEH,CA5BD;;KAAML,Q;AA8BN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}